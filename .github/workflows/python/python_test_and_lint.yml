name: Test & Lint

on:
  workflow_call:
    inputs:
      
      RUNS_ON:
        description: Platforms to execute on, in format of a string JSON array
        type: string
        default: '["ubuntu-latest"]'
      
      PYTHON_VERSION: 
        description: Python version numbers to build with, in format of a numeric JSON array
        type: string
        default: '[ 3.7 ]'
      
      ARTIFACTORY_REPOSITORY:
        description: 'An artifactory PyPi repository for exclusively artifact retrieval (just the name)'
        type: string
        default: pypi-snapshot
      
      TEST_COMMAND:
        description: Override this to provide specific test behavior
        type: string
        default: |
          pytest -v
      
      LINT_COMMAND:
        description: Override this if you want to specify how to lint
        type: string
        default: |
          flake8
      
    secrets:

      ARTIFACTORY_USER:
        description: Username from an artifactory user login
    
      ARTIFACTORY_PASSWORD:
        description: Password from an artifactory user login


jobs:

  #
  # Test using docker:
  #
  test-docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1 # for usage of --mount
    steps:
      - name: Checkout
        uses: hgdata/checkout@v2
      
      - name: Setup pip to default to ${{ inputs.ARTIFACTORY_REPOSITORY }}
        run: |
          mkdir -p ~/.pip/
          cat <<EOF > ~/.pip/pip.conf
          [global]
          index-url = https://${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_PASSWORD }}@hgdata.jfrog.io/artifactory/api/pypi/${{ inputs.ARTIFACTORY_REPOSITORY }}/simple
          EOF

      - name: Build
        run: |
          docker-compose build

      - name: Test
        run: |
          docker-compose run dev sh -c "${{ inputs.TEST_COMMAND }}"
         
      - name: Lint
        run: |
          docker-compose run dev sh -c "${{ inputs.LINT_COMMAND }}"

  #
  # Test using VM directly (Parameterize these environments to test different substrates):
  #
  test-python:
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.PYTHON_VERSION) }}
        runs-on: ${{ fromJSON(inputs.RUNS_ON) }}
    runs-on: ${{ matrix.runs-on }}
    steps:

      - name: Checkout
        uses: hgdata/checkout@v2

      - name: Setup Python
        uses: hgdata/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup pip to default to ${{ inputs.ARTIFACTORY_REPOSITORY }}
        run: |
          mkdir -p ~/.pip/
          cat <<EOF > ~/.pip/pip.conf
          [global]
          index-url = https://${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_PASSWORD }}@hgdata.jfrog.io/artifactory/api/pypi/${{ inputs.ARTIFACTORY_REPOSITORY }}/simple
          EOF

      - name: Install dependencies
        run: |
          echo 'Build deps:'
          python -m pip install --upgrade pip setuptools
          
          echo 'App deps:'
          pip install .

          echo 'Dev deps:'
          pip install .[dev]

      - name: Test
        run: ${{ inputs.TEST_COMMAND }}
         
      - name: Lint
        run: ${{ inputs.LINT_COMMAND }}

